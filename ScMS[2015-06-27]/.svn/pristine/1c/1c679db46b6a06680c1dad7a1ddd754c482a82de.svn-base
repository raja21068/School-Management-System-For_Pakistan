/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.school.view;

import com.school.model.Campus;
import com.school.model.Classes;
import com.school.model.FeesStructure;
import com.school.model.Section;
import com.school.model.UserPrivilege;
import com.school.dao.DatabaseManager;
import com.school.dao.DatabaseQueryExecuter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.school.utils.ComponentHandler;

/**
 * This frame is for set the Fee structure of every class related to section.
 *
 * @author JAY KUMAR
 */
public class FeeStructureJFrame extends javax.swing.JFrame {

    /**
     * Creates new form FeeStructureJFrame
     */
    UserPrivilege privilege;

    public FeeStructureJFrame(UserPrivilege privilege) {
        initComponents();
        ComponentHandler.setJFrameCenterPostion(this);
        this.privilege = privilege;
    }

    @Override
    public void setVisible(boolean b) {
        super.setVisible(b); //To change body of generated methods, choose Tools | Templates.
        if (!b) {
            return;
        }
        if (privilege.getIsAdd() == null || (!privilege.getIsAdd())) {
            buttonSave.setVisible(false);
        }
        new Thread() {
            @Override
            public void run() {
                ComponentHandler.setCampus(comboBoxCampus);
                ComponentHandler.setSection(comboBoxSection);
                refreshClassesFees();

            }
        }.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboBoxCampus = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        comboBoxSection = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableFeeStructure = new javax.swing.JTable();
        buttonSave = new javax.swing.JButton();

        setTitle("FEES STRUCTURE");
        setIconImage((new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_struct.png"))).getImage());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("FEES STRUCTURE");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Campus");

        comboBoxCampus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        comboBoxCampus.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxCampusItemStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Section");

        comboBoxSection.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        comboBoxSection.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxSectionItemStateChanged(evt);
            }
        });
        comboBoxSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSectionActionPerformed(evt);
            }
        });

        tableFeeStructure.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Class", "Fee", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableFeeStructure.getTableHeader().setReorderingAllowed(false);
        tableFeeStructure.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableFeeStructureKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableFeeStructure);
        tableFeeStructure.getColumnModel().getColumn(2).setMinWidth(10);
        tableFeeStructure.getColumnModel().getColumn(2).setPreferredWidth(10);
        tableFeeStructure.getColumnModel().getColumn(2).setMaxWidth(10);

        buttonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/Actions-document-save-icon.png"))); // NOI18N
        buttonSave.setText("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(comboBoxSection, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(comboBoxCampus, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboBoxCampus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboBoxSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxCampusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxCampusItemStateChanged
        refreshClassesFees();
    }//GEN-LAST:event_comboBoxCampusItemStateChanged

    private void comboBoxSectionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxSectionItemStateChanged
        refreshClassesFees();
    }//GEN-LAST:event_comboBoxSectionItemStateChanged

    private void comboBoxSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxSectionActionPerformed

    private void tableFeeStructureKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableFeeStructureKeyReleased
        buttonSave.setEnabled(true);
    }//GEN-LAST:event_tableFeeStructureKeyReleased

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        try {
            int rows = tableFeeStructure.getRowCount();
            for (int i = 0; i < rows; i++) {
                Object ob = tableFeeStructure.getValueAt(i, 2);
                // means fees already set in table.
                if (ob instanceof FeesStructure) {
                    
                    FeesStructure strct = (FeesStructure) ob;
                    try {
                        strct.setAmount((int) tableFeeStructure.getValueAt(i, 1));
                        DatabaseManager.updateData(strct);
                    } catch (Exception ex) {
                        ex.printStackTrace(System.err);
                        continue;
                    }
                } else { // Means fees changed or first time fee inserted.
                    try {
                        FeesStructure strct = new FeesStructure((Campus) comboBoxCampus.getSelectedItem(), (Classes) tableFeeStructure.getValueAt(i, 0), (int) tableFeeStructure.getValueAt(i, 1));
                        DatabaseManager.addData(strct);
                    } catch (Exception ex) {
                        ex.printStackTrace(System.err);
                    }
                }
            }
            refreshClassesFees();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_buttonSaveActionPerformed
    
    /**
     * Refresh the fees structure of class in table of selected section.
     */
    private void refreshClassesFees() {
        buttonSave.setEnabled(false);
        DefaultTableModel model = (DefaultTableModel) tableFeeStructure.getModel();
        ComponentHandler.emptyTable(tableFeeStructure);
        Section sec = (Section) comboBoxSection.getSelectedItem();
        Campus camp = (Campus) comboBoxCampus.getSelectedItem();

        for (Classes object : sec.getClasseses()) {
            Object strct = "";
            int amount = 0;
            try {
               
                List strtList = DatabaseQueryExecuter.getFeesStructure(camp.getCampusId(),object.getClassId());;
                if (!strtList.isEmpty()) {
                    strct = strtList.get(0);
                    amount = ((FeesStructure) strct).getAmount();
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error Occured..!\n" + ex.getMessage());
                ex.printStackTrace(System.err);
            }
            model.addRow(new Object[]{object, amount != 0 ? amount : "", strct});
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSave;
    private javax.swing.JComboBox comboBoxCampus;
    private javax.swing.JComboBox comboBoxSection;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableFeeStructure;
    // End of variables declaration//GEN-END:variables
}
