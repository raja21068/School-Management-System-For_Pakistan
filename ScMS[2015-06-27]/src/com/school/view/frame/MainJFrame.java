/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.school.view.frame;

import com.school.config.AppIcon;
import com.school.model.SchoolConfig;
import com.school.model.TgUser;
import com.school.model.UserPrivilege;
import com.school.constant.ConsConfiguration;
import com.school.constant.D_Msg;
import com.school.enums.Forms;
import com.school.dao.DatabaseManager;
import com.school.dao.DatabaseQueryExecuter;
import com.school.log.AppLog;
import com.school.utils.AppMsg;
import com.school.view.JkPanel;
import java.awt.Color;
import java.awt.Image;
import java.util.List;
import java.util.Properties;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.hibernate.criterion.Restrictions;
import com.school.view.panel.AttendancePanel;
import com.school.view.panel.BottomPanel;
import com.school.view.panel.CampusPanel;
import com.school.view.panel.CenterPanel;
import com.school.view.panel.ChartsPanel;
import com.school.view.panel.ClassShiftingPanel;
import com.school.view.panel.ConfigurationPanel;
import com.school.view.panel.EmployeeCategoryPanel;
import com.school.view.panel.EmployeePanel;
import com.school.view.panel.EventsPanel;
import com.school.view.panel.ExaminationPanel;
import com.school.view.panel.ExaminationTypePanel;
import com.school.view.panel.FeesPanel;
import com.school.view.panel.FeesStructurePanel;
import com.school.view.panel.ReportsPanel;
import com.school.view.panel.SMSPanel;
import com.school.view.panel.SalaryManagePanel;
import com.school.view.panel.SectionClassSubjectPanel;
import com.school.view.panel.StudentPanel;
import com.school.view.panel.TopPanel;
import com.school.view.panel.UserManagePanel;
import com.school.view.panel.YearRegisterPanel;
import java.awt.BorderLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JScrollPane;

/**
 * Main Frame after login appears. Contains the all menus of every frame.
 *
 * @author JAY KUMAR
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    CampusPanel campus ;
    ClassShiftingPanel classShift ;
    ConfigurationPanel config ;
    EmployeeCategoryPanel empCat ;
    EmployeePanel emp ;
    ExaminationPanel exam ;
    ExaminationTypePanel examType ;
    EventsPanel events  ;
    FeesPanel fees  ;
    FeesStructurePanel feeStruct ;
    SectionClassSubjectPanel section  ;
    AttendancePanel stdAttend ;
    StudentPanel std ;
    UserManagePanel usersFrame ;
    YearRegisterPanel years ;
    SalaryManagePanel salary ;
    ChartsPanel stdChart;
    ReportsPanel reports;
    SMSPanel smsFrame ;
    BottomPanel bottom ;
    CenterPanel homePanel ;
    JFileChooser fileChooser;
    JScrollPane centerScrollPane;
    TopPanel topPanel;
    

    public MainJFrame(TgUser user) {
        initComponents();
        setExtendedState(getExtendedState()|JFrame.MAXIMIZED_BOTH );
        getContentPane().setBackground(Color.GRAY);
        setConfiguration();
        setAppearence(user);
        fileChooser = new JFileChooser("../");
        fileChooser.removeChoosableFileFilter(fileChooser.getAcceptAllFileFilter());
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("(*.sql)", "sql"));
        String url = null;
        try{
            Properties props = com.school.dao.Handler.getDatabaseProperties();
            url = props.getProperty(com.school.dao.Handler.DB_URL_KEY);
        }catch(Exception ex){Logger.getLogger(AppLog.ERROR_LOG).log(Level.SEVERE, null, ex);}
        bottom = new BottomPanel(user.getName(),url);
        homePanel = new CenterPanel();
        centerScrollPane = new JScrollPane();
        getContentPane().add(bottom, BorderLayout.PAGE_END);
        getContentPane().add(centerScrollPane, BorderLayout.CENTER);
        centerScrollPane.setViewportView(homePanel);

        topPanel = new TopPanel() {
            @Override
            public void homeAction() {
                centerScrollPane.setViewportView(homePanel);
                getContentPane().remove(topPanel);
                getContentPane().revalidate();
            }
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        menuSetup = new javax.swing.JMenu();
        menuItemCampus = new javax.swing.JMenuItem();
        menuItemCanfiguration = new javax.swing.JMenuItem();
        menuItemEmployeeCat = new javax.swing.JMenuItem();
        menuItemSection = new javax.swing.JMenuItem();
        menuItemUsers = new javax.swing.JMenuItem();
        menuItemYears = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuItemExit = new javax.swing.JMenuItem();
        menuEntry = new javax.swing.JMenu();
        menuItemStudent = new javax.swing.JMenuItem();
        menuItemEmployee = new javax.swing.JMenuItem();
        menuItemClassShifting = new javax.swing.JMenuItem();
        menuItemEvents = new javax.swing.JMenuItem();
        menuFees = new javax.swing.JMenu();
        menuItemFeesStructure = new javax.swing.JMenuItem();
        menuItemChallanAndPay = new javax.swing.JMenuItem();
        menuItemSalary = new javax.swing.JMenuItem();
        menuAttendence = new javax.swing.JMenu();
        menuItemStudentAttendence = new javax.swing.JMenuItem();
        menuExam = new javax.swing.JMenu();
        menuItemExamination = new javax.swing.JMenuItem();
        menuItemExamType = new javax.swing.JMenuItem();
        menuReport = new javax.swing.JMenu();
        menuItemStdChart = new javax.swing.JMenuItem();
        menuItemReports = new javax.swing.JMenuItem();
        menuSMS = new javax.swing.JMenu();
        menuItemSMS = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Jayrasoft");
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImage((new javax.swing.ImageIcon(getClass().getResource(com.school.config.AppIcon.LOGO))).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jMenuBar1.setBackground(new java.awt.Color(252, 100, 1));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        menuSetup.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        menuSetup.setText("Setup");
        menuSetup.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N

        menuItemCampus.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        menuItemCampus.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_CAMPUS)));
        menuItemCampus.setText("Campus");
        menuItemCampus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCampusActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemCampus);

        menuItemCanfiguration.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuItemCanfiguration.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_CONFIGURATION)));
        menuItemCanfiguration.setText("Configuration");
        menuItemCanfiguration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCanfigurationActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemCanfiguration);

        menuItemEmployeeCat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menuItemEmployeeCat.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_EMPLOYEE_CATEGORY)));
        menuItemEmployeeCat.setText("Emp/Account Cat");
        menuItemEmployeeCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEmployeeCatActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemEmployeeCat);

        menuItemSection.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuItemSection.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_SECTION)));
        menuItemSection.setText("Section");
        menuItemSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSectionActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemSection);

        menuItemUsers.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        menuItemUsers.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_USER)));
        menuItemUsers.setText("Users");
        menuItemUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUsersActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemUsers);

        menuItemYears.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        menuItemYears.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_YEAR)));
        menuItemYears.setText("Year (batch)");
        menuItemYears.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemYearsActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemYears);
        menuSetup.add(jSeparator1);

        menuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        menuItemExit.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_EXIT)));
        menuItemExit.setText("Exit");
        menuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExitActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemExit);

        jMenuBar1.add(menuSetup);

        menuEntry.setText("Entry");
        menuEntry.setBorderPainted(true);
        menuEntry.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuEntry.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemStudent.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        menuItemStudent.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_STUDENT)));
        menuItemStudent.setText("Student");
        menuItemStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemStudentActionPerformed(evt);
            }
        });
        menuEntry.add(menuItemStudent);

        menuItemEmployee.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        menuItemEmployee.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_EMPLOYEE)));
        menuItemEmployee.setText("Employee");
        menuItemEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEmployeeActionPerformed(evt);
            }
        });
        menuEntry.add(menuItemEmployee);

        menuItemClassShifting.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        menuItemClassShifting.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_SHIFTING)));
        menuItemClassShifting.setText("Class Shifting");
        menuItemClassShifting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemClassShiftingActionPerformed(evt);
            }
        });
        menuEntry.add(menuItemClassShifting);

        menuItemEvents.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_EVENTS)));
        menuItemEvents.setText("Events / Compitition");
        menuItemEvents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEventsActionPerformed(evt);
            }
        });
        menuEntry.add(menuItemEvents);

        jMenuBar1.add(menuEntry);

        menuFees.setText("Fees");
        menuFees.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuFees.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemFeesStructure.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        menuItemFeesStructure.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_FEES_STRUCTURE)));
        menuItemFeesStructure.setText("Fees Structure");
        menuItemFeesStructure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemFeesStructureActionPerformed(evt);
            }
        });
        menuFees.add(menuItemFeesStructure);

        menuItemChallanAndPay.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        menuItemChallanAndPay.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_CHALLAN)));
        menuItemChallanAndPay.setText("Challan & Payment");
        menuItemChallanAndPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemChallanAndPayActionPerformed(evt);
            }
        });
        menuFees.add(menuItemChallanAndPay);

        menuItemSalary.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        menuItemSalary.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_SALARY)));
        menuItemSalary.setText("Salary Management");
        menuItemSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSalaryActionPerformed(evt);
            }
        });
        menuFees.add(menuItemSalary);

        jMenuBar1.add(menuFees);

        menuAttendence.setText("Attendence");
        menuAttendence.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuAttendence.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemStudentAttendence.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        menuItemStudentAttendence.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_ATTENDANCE)));
        menuItemStudentAttendence.setText("Student");
        menuItemStudentAttendence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemStudentAttendenceActionPerformed(evt);
            }
        });
        menuAttendence.add(menuItemStudentAttendence);

        jMenuBar1.add(menuAttendence);

        menuExam.setText("Exam");
        menuExam.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuExam.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemExamination.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        menuItemExamination.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_EXAMINATION)));
        menuItemExamination.setText("Examination");
        menuItemExamination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExaminationActionPerformed(evt);
            }
        });
        menuExam.add(menuItemExamination);

        menuItemExamType.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_CATEGORY)));
        menuItemExamType.setText("Terms");
        menuItemExamType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExamTypeActionPerformed(evt);
            }
        });
        menuExam.add(menuItemExamType);

        jMenuBar1.add(menuExam);

        menuReport.setText("Report");
        menuReport.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuReport.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemStdChart.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_CHART)));
        menuItemStdChart.setText("Student Chart");
        menuItemStdChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemStdChartActionPerformed(evt);
            }
        });
        menuReport.add(menuItemStdChart);

        menuItemReports.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_REPORTS)));
        menuItemReports.setText("Reports");
        menuItemReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemReportsActionPerformed(evt);
            }
        });
        menuReport.add(menuItemReports);

        jMenuBar1.add(menuReport);

        menuSMS.setText("SMS");
        menuSMS.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuSMS.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemSMS.setIcon(new ImageIcon(getClass().getResource(AppIcon.MENU_SMS)));
        menuItemSMS.setText("SMS Sending");
        menuItemSMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSMSActionPerformed(evt);
            }
        });
        menuSMS.add(menuItemSMS);

        jMenuBar1.add(menuSMS);

        menuHelp.setText("Help");
        menuHelp.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuHelp.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/Help-icon.png"))); // NOI18N
        menuItemAbout.setText("About");
        menuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAboutActionPerformed(evt);
            }
        });
        menuHelp.add(menuItemAbout);

        jMenuBar1.add(menuHelp);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemCampusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCampusActionPerformed
        setPanel(campus);       
    }//GEN-LAST:event_menuItemCampusActionPerformed

    private void menuItemCanfigurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCanfigurationActionPerformed
        setPanel(config);
    }//GEN-LAST:event_menuItemCanfigurationActionPerformed

    private void menuItemEmployeeCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEmployeeCatActionPerformed
        setPanel(empCat);        
    }//GEN-LAST:event_menuItemEmployeeCatActionPerformed

    private void menuItemSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSectionActionPerformed
            setPanel(section);
        
    }//GEN-LAST:event_menuItemSectionActionPerformed

    private void menuItemUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUsersActionPerformed
            setPanel(usersFrame);
        
    }//GEN-LAST:event_menuItemUsersActionPerformed

    private void menuItemYearsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemYearsActionPerformed
        
        setPanel(years);
        
    }//GEN-LAST:event_menuItemYearsActionPerformed

    private void menuItemStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemStudentActionPerformed
            setPanel(std);
        
    }//GEN-LAST:event_menuItemStudentActionPerformed

    private void menuItemEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEmployeeActionPerformed
        
       setPanel(emp);
       
    }//GEN-LAST:event_menuItemEmployeeActionPerformed

    private void menuItemClassShiftingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemClassShiftingActionPerformed
        
        setPanel(classShift);
        
    }//GEN-LAST:event_menuItemClassShiftingActionPerformed

    private void menuItemFeesStructureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemFeesStructureActionPerformed
        setPanel(feeStruct);
        
    }//GEN-LAST:event_menuItemFeesStructureActionPerformed

    private void menuItemChallanAndPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemChallanAndPayActionPerformed
        setPanel(fees);
    }//GEN-LAST:event_menuItemChallanAndPayActionPerformed

    private void menuItemStudentAttendenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemStudentAttendenceActionPerformed
        setPanel(stdAttend);
    }//GEN-LAST:event_menuItemStudentAttendenceActionPerformed

    private void menuItemExaminationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExaminationActionPerformed
        setPanel(exam);
    }//GEN-LAST:event_menuItemExaminationActionPerformed

    private void menuItemExamTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExamTypeActionPerformed
        setPanel(examType);
    }//GEN-LAST:event_menuItemExamTypeActionPerformed

    private void menuItemSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSalaryActionPerformed
        setPanel(salary);
    }//GEN-LAST:event_menuItemSalaryActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        exit();
    }//GEN-LAST:event_formWindowClosing

    private void menuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExitActionPerformed
        exit();
    }//GEN-LAST:event_menuItemExitActionPerformed

    private void menuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAboutActionPerformed
        AppMsg.info(this, "Developer\nJay Kumar Tharwani S/O Ghansham Das\nComputer Science Department\nUniversity Of Sindh\nLicensed To\nThe Guardian School HYD.2014\nCONTACT:\njay_tharwani1992@yahoo.com\n+92-333-2836704\n+92-333-2836705\n+92-315-3028704\n");
    }//GEN-LAST:event_menuItemAboutActionPerformed

    private void menuItemStdChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemStdChartActionPerformed
        setPanel(stdChart);
    }//GEN-LAST:event_menuItemStdChartActionPerformed

    private void menuItemReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemReportsActionPerformed
        setPanel(reports);
    }//GEN-LAST:event_menuItemReportsActionPerformed

    private void menuItemEventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEventsActionPerformed
        setPanel(events);
        
    }//GEN-LAST:event_menuItemEventsActionPerformed

    private void menuItemSMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSMSActionPerformed
        setPanel(smsFrame);
    }//GEN-LAST:event_menuItemSMSActionPerformed

    /**
     * Get configuration variable from database and set it on frame and menus.
     */
    private void setConfiguration() {
        try {
            List list = DatabaseManager.getData(com.school.model.SchoolConfig.class, Restrictions.like("keyName", ConsConfiguration.SCHOOL));
            if (list.size() > 0) {
                this.setTitle(((SchoolConfig) list.get(0)).getValueName());
            }

            list = DatabaseManager.getData(com.school.model.SchoolConfig.class, Restrictions.like("keyName", ConsConfiguration.LOGO));
            if (list.size() > 0) {
                try {
                    Image image = (new javax.swing.ImageIcon(((SchoolConfig) list.get(0)).getValueName())).getImage();
                    this.setIconImage(image);
                } catch (Exception ex) {
                    Logger.getLogger(AppLog.ERROR_LOG).log(Level.SEVERE, null, ex);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(AppLog.ERROR_LOG).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Set appearence of frame (restrict the visiblity of frame) according to
     * user privilege.
     *
     * @param user
     */
    private void setAppearence(TgUser user) {
        try {
            List<UserPrivilege> privileges =  DatabaseQueryExecuter.getPrivileges(user);
            UserPrivilege campPriv = getPrivilege(privileges, Forms.CAMPUS);
            if (!campPriv.getIsActive()) {
                menuItemCampus.setEnabled(false);
            } else {
                campus = new CampusPanel(campPriv);
            }


            UserPrivilege configPriv = getPrivilege(privileges, Forms.CONFIGURATION);
            if (!configPriv.getIsActive()) {
                menuItemCampus.setEnabled(false);
            } else {
                config = new ConfigurationPanel(configPriv);
            }

            UserPrivilege catPriv = getPrivilege(privileges, Forms.EMPLOYEE_CATEGORY);
            if (!catPriv.getIsActive()) {
                menuItemEmployeeCat.setEnabled(false);
            } else {
                empCat = new EmployeeCategoryPanel(catPriv);
            }

            UserPrivilege secPriv = getPrivilege(privileges, Forms.SECTION);
            if (!secPriv.getIsActive()) {
                menuItemSection.setEnabled(false);
            } else {
                section = new SectionClassSubjectPanel(secPriv);
            }

            UserPrivilege userPriv = getPrivilege(privileges, Forms.USERS);
            if (!userPriv.getIsActive()) {
                menuItemUsers.setEnabled(false);
            } else {
                usersFrame = new UserManagePanel(userPriv);
            }

            UserPrivilege yearPriv = getPrivilege(privileges, Forms.YEAR);
            if (!yearPriv.getIsActive()) {
                menuItemYears.setEnabled(false);
            } else {
                years = new YearRegisterPanel(yearPriv);
            }

            UserPrivilege stdPriv = getPrivilege(privileges, Forms.STUDENT);
            if (!stdPriv.getIsActive()) {
                menuItemStudent.setEnabled(false);
            } else {
                std = new StudentPanel(stdPriv);
            }

            UserPrivilege empPriv = getPrivilege(privileges, Forms.EMPLOYEE);
            if (!empPriv.getIsActive()) {
                menuItemEmployee.setEnabled(false);
            } else {
                emp = new EmployeePanel(empPriv);
            }

            UserPrivilege classShiftPriv = getPrivilege(privileges, Forms.CLASS_SHIFTING);
            if (!classShiftPriv.getIsActive()) {
                menuItemClassShifting.setEnabled(false);
            } else {
                classShift = new ClassShiftingPanel(classShiftPriv);
            }

            UserPrivilege feestructPriv =getPrivilege(privileges, Forms.FEES_STRUCTURE);
            if (!feestructPriv.getIsActive()) {
                menuItemFeesStructure.setEnabled(false);
            } else {
                feeStruct = new FeesStructurePanel(feestructPriv);
            }

            UserPrivilege feesPriv = getPrivilege(privileges, Forms.FEES);
            if (!feesPriv.getIsActive()) {
                menuItemChallanAndPay.setEnabled(false);
            } else {
                fees = new FeesPanel(feesPriv);
            }

            UserPrivilege attendPriv = getPrivilege(privileges, Forms.STUDENT_ATTENDANCE);
            if (!attendPriv.getIsActive()) {
                menuItemStudentAttendence.setEnabled(false);
            } else {
                stdAttend = new AttendancePanel(attendPriv);
            }

            UserPrivilege examPriv = getPrivilege(privileges, Forms.EXAMINATION);
            if (!examPriv.getIsActive()) {
                menuItemExamination.setEnabled(false);
            } else {
                exam = new ExaminationPanel(examPriv);
            }

            UserPrivilege examTypePriv = getPrivilege(privileges, Forms.EXAMINATION_TYPE);
            if (!examTypePriv.getIsActive()) {
                menuItemExamType.setEnabled(false);
            } else {
                examType = new ExaminationTypePanel(examTypePriv);
            }

            UserPrivilege salaryPriv = getPrivilege(privileges, Forms.SALARY);
            if (!salaryPriv.getIsActive()) {
                menuItemSalary.setEnabled(false);
            } else {
                salary = new SalaryManagePanel(salaryPriv);
            }
            UserPrivilege stdChartPriv = getPrivilege(privileges, Forms.STUDENT_CHART);
            if (!stdChartPriv.getIsActive()) {
                menuItemStdChart.setEnabled(false);
            } else {
                stdChart = new ChartsPanel(stdChartPriv);
            }

            UserPrivilege reportsPriv = getPrivilege(privileges, Forms.REPORTS);
            if (!reportsPriv.getIsActive()) {
                menuItemReports.setEnabled(false);
            } else {
                reports = new ReportsPanel(reportsPriv);
            }

            UserPrivilege eventsPriv = getPrivilege(privileges, Forms.EVENTS);
            if (!eventsPriv.getIsActive()) {
                menuItemEvents.setEnabled(false);
            } else {
                events = new EventsPanel(eventsPriv);
            }

            UserPrivilege smsPriv = getPrivilege(privileges, Forms.SMS_SENDING);
            if (!smsPriv.getIsActive()) {
                menuItemSMS.setEnabled(false);
            } else {
                smsFrame = new SMSPanel(smsPriv);
            }
        } catch (Exception ex) {
            AppMsg.error(this, ex,ex);
            Logger.getLogger(AppLog.ERROR_LOG).log(Level.SEVERE, null, ex);
        }

    }

    private void exit() {
        int i = AppMsg.confirm2(this, D_Msg.MSG_15);
        if (i == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuAttendence;
    private javax.swing.JMenu menuEntry;
    private javax.swing.JMenu menuExam;
    private javax.swing.JMenu menuFees;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuItemAbout;
    private javax.swing.JMenuItem menuItemCampus;
    private javax.swing.JMenuItem menuItemCanfiguration;
    private javax.swing.JMenuItem menuItemChallanAndPay;
    private javax.swing.JMenuItem menuItemClassShifting;
    private javax.swing.JMenuItem menuItemEmployee;
    private javax.swing.JMenuItem menuItemEmployeeCat;
    private javax.swing.JMenuItem menuItemEvents;
    private javax.swing.JMenuItem menuItemExamType;
    private javax.swing.JMenuItem menuItemExamination;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JMenuItem menuItemFeesStructure;
    private javax.swing.JMenuItem menuItemReports;
    private javax.swing.JMenuItem menuItemSMS;
    private javax.swing.JMenuItem menuItemSalary;
    private javax.swing.JMenuItem menuItemSection;
    private javax.swing.JMenuItem menuItemStdChart;
    private javax.swing.JMenuItem menuItemStudent;
    private javax.swing.JMenuItem menuItemStudentAttendence;
    private javax.swing.JMenuItem menuItemUsers;
    private javax.swing.JMenuItem menuItemYears;
    private javax.swing.JMenu menuReport;
    private javax.swing.JMenu menuSMS;
    private javax.swing.JMenu menuSetup;
    // End of variables declaration//GEN-END:variables

    
    private void exportDB() {
        int option = fileChooser.showSaveDialog(this);
        if (JFileChooser.APPROVE_OPTION == option) {
            try {
                String path = fileChooser.getSelectedFile().getAbsolutePath();
                if (!path.toLowerCase().endsWith(".sql")) {
                    path = (path + ".sql");
                }
                Properties props = com.school.dao.Handler.getDatabaseProperties();
                com.school.dao.Handler.backupDB(props.getProperty(com.school.dao.Handler.DB_USERNAME_KEY), props.getProperty(com.school.dao.Handler.DB_PASSWORD_KEY), path);
            } catch (Exception ex) {
                AppMsg.error(this, ex,ex);
                Logger.getLogger(AppLog.ERROR_LOG).log(Level.SEVERE, null, ex);
            }
        }
    }
    private void importDB(){
    int option = fileChooser.showOpenDialog(this);

        if (JFileChooser.APPROVE_OPTION == option) {
            try {
                Properties props = com.school.dao.Handler.getDatabaseProperties();
                com.school.dao.Handler.restoreDB(props.getProperty(com.school.dao.Handler.DB_USERNAME_KEY), props.getProperty(com.school.dao.Handler.DB_PASSWORD_KEY), fileChooser.getSelectedFile().getAbsolutePath());
            } catch (Exception ex) {
                AppMsg.error(this, ex,ex);
                Logger.getLogger(AppLog.ERROR_LOG).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    
    public UserPrivilege getPrivilege(List<UserPrivilege> privileges, Forms className){
        for(int i=0;i<privileges.size();i++){
            UserPrivilege object = privileges.get(i);
            if(className.getValue().equals(object.getModule().getName())){
                return object;
            }
        }
        return null;
    }
    
    
    private void setPanel(final JkPanel panel){
        getContentPane().add(topPanel, BorderLayout.PAGE_START);

        centerScrollPane.setViewportView(panel);
        getContentPane().revalidate();
        new Thread(){
            @Override
            public void run() {
                panel.refresh();
            }
        }.start();

        
       
    }
}
