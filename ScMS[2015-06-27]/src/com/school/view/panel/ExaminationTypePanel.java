/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.school.view.panel;

import com.school.constant.D_Msg;
import com.school.dao.DatabaseManager;
import com.school.log.AppLog;
import com.school.model.ExamType;
import com.school.model.UserPrivilege;
import com.school.utils.AppMsg;
import com.school.view.JkPanel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.hibernate.criterion.Order;

/**
 *
 * @author JAY
 */
public class ExaminationTypePanel extends JkPanel{

    /**
     * Creates new form ExaminationTypePanel
     */
    public ExaminationTypePanel(UserPrivilege privilege) {
        super(privilege);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textFieldTypeName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        spinFieldSequence = new com.toedter.components.JSpinField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listExamType = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaRemarks = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        buttonAdd = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        buttonClear = new javax.swing.JButton();

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("EXAM TYPE");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Type Name*");

        textFieldTypeName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Sequence");

        listExamType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        listExamType.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listExamTypeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listExamType);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Remarks");

        textAreaRemarks.setColumns(20);
        textAreaRemarks.setRows(5);
        jScrollPane2.setViewportView(textAreaRemarks);

        buttonAdd.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        buttonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/database-add-icon.png"))); // NOI18N
        buttonAdd.setText("Add");
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });
        jPanel2.add(buttonAdd);

        buttonDelete.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/database-delete-icon.png"))); // NOI18N
        buttonDelete.setText("Delete");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(buttonDelete);

        buttonUpdate.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        buttonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/document-arrow-up-icon.png"))); // NOI18N
        buttonUpdate.setText("Update");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(buttonUpdate);

        buttonClear.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        buttonClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/empty-icon.png"))); // NOI18N
        buttonClear.setText("Clear");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });
        jPanel2.add(buttonClear);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textFieldTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spinFieldSequence, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(textFieldTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(spinFieldSequence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listExamTypeValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listExamTypeValueChanged
        extractBean((ExamType) listExamType.getSelectedValue());
    }//GEN-LAST:event_listExamTypeValueChanged

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        ExamType type = new ExamType();
        if (setBean(type)) {
            try {
                DatabaseManager.addData(type);
                refreshExamType();
            } catch (Exception ex) {
                AppMsg.error(this, D_Msg.MSG_6,ex);
                Logger.getLogger(AppLog.ERROR_LOG).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonAddActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        ExamType bean = (ExamType) listExamType.getSelectedValue();
        try {
            DatabaseManager.deleteData(bean);
            refreshExamType();
        } catch (Exception ex) {
            AppMsg.error(this, D_Msg.MSG_6,ex);
            Logger.getLogger(AppLog.ERROR_LOG).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        ExamType bean = (ExamType) listExamType.getSelectedValue();
        if (setBean(bean)) {
            try {
                DatabaseManager.updateData(bean);
                refreshExamType();
            } catch (Exception ex) {
                AppMsg.error(this, D_Msg.MSG_6,ex);
                Logger.getLogger(AppLog.ERROR_LOG).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        clear();
    }//GEN-LAST:event_buttonClearActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton buttonAdd;
    public javax.swing.JButton buttonClear;
    public javax.swing.JButton buttonDelete;
    public javax.swing.JButton buttonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList listExamType;
    private com.toedter.components.JSpinField spinFieldSequence;
    private javax.swing.JTextArea textAreaRemarks;
    private javax.swing.JTextField textFieldTypeName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void refresh() {
         refreshExamType();
    }
    
      /**
     * set the attributes in exam type object from fields.
     *
     * @param type - examination term
     * @return
     */
    private boolean setBean(ExamType type) {
        String name = textFieldTypeName.getText();
        if (name.trim().isEmpty()) {
            AppMsg.warning(this, D_Msg.MSG_23);

            return false;
        }
        type.setExamName(name);
        type.setSequenceNo(spinFieldSequence.getValue());
        type.setRemarks(textAreaRemarks.getText());
        return true;
    }

    /**
     * Set the exam terms in list.
     */
    private void refreshExamType() {
        try {
            clear();
            listExamType.setListData(DatabaseManager.getData(ExamType.class,Order.desc("sequenceNo")).toArray());
        } catch (Exception ex) {
            AppMsg.error(this, D_Msg.MSG_6,ex);
            Logger.getLogger(AppLog.ERROR_LOG).log(Level.SEVERE, null, ex);
        }
    }

    private void clear() {
        buttonDelete.setEnabled(false);
        buttonUpdate.setEnabled(false);
        listExamType.clearSelection();
        textFieldTypeName.setText("");
        textAreaRemarks.setText("");
    }

    /**
     * set attributes into fields from exam type object.
     *
     * @param type
     */
    private void extractBean(ExamType type) {
        if (type == null) {
            return;
        }
        buttonDelete.setEnabled(true);
        buttonUpdate.setEnabled(true);
        textFieldTypeName.setText(type.getExamName());
        textAreaRemarks.setText(type.getRemarks());
        spinFieldSequence.setValue(type.getSequenceNo());
    }

    @Override
    protected void postInit() {
        
    }

    @Override
    protected void handlePrivilege() {
        if (privilege.getIsAdd() == null || (!privilege.getIsAdd())) {
            buttonAdd.setVisible(false);
        }
        if (privilege.getIsDelete() == null || (!privilege.getIsDelete())) {
            buttonDelete.setVisible(false);
        }
        if (privilege.getIsUpdate() == null || (!privilege.getIsUpdate())) {
            buttonUpdate.setVisible(false);
        }
    }

    @Override
    protected void initComponentImplementation() {
        initComponents();
    }
}
