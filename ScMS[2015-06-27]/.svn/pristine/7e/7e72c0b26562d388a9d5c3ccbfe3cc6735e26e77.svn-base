/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.school.view;

import com.school.model.SchoolConfig;
import com.school.model.TgUser;
import com.school.model.UserPrivilege;
import com.school.constant.Configuration;
import com.school.dao.DatabaseManager;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.List;
import java.util.Properties;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.hibernate.criterion.Restrictions;
import com.school.utils.ComponentHandler;
import com.school.utils.PrivilegeHelper;

/**
 * Main Frame after login appears. Contains the all menus of every frame.
 *
 * @author JAY KUMAR
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    CampusJFrame campus = null;
    ClassShiftingJFrame classShift = null;
    ConfigJFrame config = null;
    EmployeeCategoryJFrame empCat = null;
    EmployeesJFrame emp = null;
    ExamJFrame exam = null;
    ExamTypeJFrame examType = null;
    EventsJFrame events = null;
    FeeJFrame fees = null;
    FeeStructureJFrame feeStruct = null;
    SectionJFrame section = null;
    StudentAttendenceJFrame stdAttend = null;
    StudentJFrame std = null;
    UserJFrame usersFrame = null;
    YearJFrame years = null;
    SalaryManagementJFrame salary = null;
    StudentChartJFrame stdChart = null;
    ReportsJFrame reports = null;
    SMSJFrame smsFrame = null;
    JFileChooser fileChooser;

    public MainJFrame(TgUser user) {
        initComponents();
        ComponentHandler.setFullScreen(this);
        getContentPane().setBackground(Color.WHITE);
        setConfiguration();
        setAppearence(user);
        fileChooser = new JFileChooser("../");
        fileChooser.removeChoosableFileFilter(fileChooser.getAcceptAllFileFilter());
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("(*.sql)", "sql"));

        labelPic.setSize(getWidth() - 50, getHeight() - 250);
        try {
            BufferedImage img = ImageIO.read(getClass().getResource("/pictures/TGS 2014 Logoo.jpg"));
            labelPic.setIcon(new ImageIcon(img.getScaledInstance(labelPic.getWidth(), labelPic.getHeight(), Image.SCALE_SMOOTH)));
        } catch (IOException e) {
            e.printStackTrace(System.err);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneldevelopers = new javax.swing.JPanel();
        labelDeveloper = new javax.swing.JLabel();
        buttonImport = new javax.swing.JButton();
        buttonExport = new javax.swing.JButton();
        labelPic = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuSetup = new javax.swing.JMenu();
        menuItemCampus = new javax.swing.JMenuItem();
        menuItemCanfiguration = new javax.swing.JMenuItem();
        menuItemEmployeeCat = new javax.swing.JMenuItem();
        menuItemSection = new javax.swing.JMenuItem();
        menuItemUsers = new javax.swing.JMenuItem();
        menuItemYears = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuItemExit = new javax.swing.JMenuItem();
        menuEntry = new javax.swing.JMenu();
        menuItemStudent = new javax.swing.JMenuItem();
        menuItemEmployee = new javax.swing.JMenuItem();
        menuItemClassShifting = new javax.swing.JMenuItem();
        menuItemEvents = new javax.swing.JMenuItem();
        menuFees = new javax.swing.JMenu();
        menuItemFeesStructure = new javax.swing.JMenuItem();
        menuItemChallanAndPay = new javax.swing.JMenuItem();
        menuItemSalary = new javax.swing.JMenuItem();
        menuAttendence = new javax.swing.JMenu();
        menuItemStudentAttendence = new javax.swing.JMenuItem();
        menuExam = new javax.swing.JMenu();
        menuItemExamination = new javax.swing.JMenuItem();
        menuItemExamType = new javax.swing.JMenuItem();
        menuReport = new javax.swing.JMenu();
        menuItemStdChart = new javax.swing.JMenuItem();
        menuItemReports = new javax.swing.JMenuItem();
        menuSMS = new javax.swing.JMenu();
        menuItemSMS = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImage((new javax.swing.ImageIcon(getClass().getResource("/pictures/TGS 2014 Logoo.jpg"))).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        paneldevelopers.setBackground(new java.awt.Color(0, 0, 0));

        labelDeveloper.setBackground(new java.awt.Color(0, 0, 0));
        labelDeveloper.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        labelDeveloper.setForeground(new java.awt.Color(255, 255, 255));
        labelDeveloper.setText("<html>Developer: <b> JAY KUMAR THARWANI</b>  ( COMPUTER SCIENCE DEP. 2014)<br/>@ copy right  The <b>Guardian</b> School.</html> ");

        javax.swing.GroupLayout paneldevelopersLayout = new javax.swing.GroupLayout(paneldevelopers);
        paneldevelopers.setLayout(paneldevelopersLayout);
        paneldevelopersLayout.setHorizontalGroup(
            paneldevelopersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneldevelopersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelDeveloper, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                .addContainerGap())
        );
        paneldevelopersLayout.setVerticalGroup(
            paneldevelopersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneldevelopersLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(labelDeveloper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        buttonImport.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonImport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/import-icon.png"))); // NOI18N
        buttonImport.setText("Import");
        buttonImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonImportActionPerformed(evt);
            }
        });

        buttonExport.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/export-icon.png"))); // NOI18N
        buttonExport.setText("Export");
        buttonExport.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        buttonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportActionPerformed(evt);
            }
        });

        jMenuBar1.setBackground(new java.awt.Color(252, 100, 1));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        menuSetup.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        menuSetup.setText("Setup");
        menuSetup.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N

        menuItemCampus.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        menuItemCampus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_campus.png"))); // NOI18N
        menuItemCampus.setText("Campus");
        menuItemCampus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCampusActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemCampus);

        menuItemCanfiguration.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuItemCanfiguration.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_config.png"))); // NOI18N
        menuItemCanfiguration.setText("Configuration");
        menuItemCanfiguration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCanfigurationActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemCanfiguration);

        menuItemEmployeeCat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menuItemEmployeeCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_cat.png"))); // NOI18N
        menuItemEmployeeCat.setText("Emp/Account Cat");
        menuItemEmployeeCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEmployeeCatActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemEmployeeCat);

        menuItemSection.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuItemSection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_section.png"))); // NOI18N
        menuItemSection.setText("Section");
        menuItemSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSectionActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemSection);

        menuItemUsers.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        menuItemUsers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_user.png"))); // NOI18N
        menuItemUsers.setText("Users");
        menuItemUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUsersActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemUsers);

        menuItemYears.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        menuItemYears.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_year.png"))); // NOI18N
        menuItemYears.setText("Year (batch)");
        menuItemYears.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemYearsActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemYears);
        menuSetup.add(jSeparator1);

        menuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        menuItemExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/Actions-window-close-icon.png"))); // NOI18N
        menuItemExit.setText("Exit");
        menuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExitActionPerformed(evt);
            }
        });
        menuSetup.add(menuItemExit);

        jMenuBar1.add(menuSetup);

        menuEntry.setText("Entry");
        menuEntry.setBorderPainted(true);
        menuEntry.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuEntry.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemStudent.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        menuItemStudent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_student.png"))); // NOI18N
        menuItemStudent.setText("Student");
        menuItemStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemStudentActionPerformed(evt);
            }
        });
        menuEntry.add(menuItemStudent);

        menuItemEmployee.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        menuItemEmployee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_employee.png"))); // NOI18N
        menuItemEmployee.setText("Employee");
        menuItemEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEmployeeActionPerformed(evt);
            }
        });
        menuEntry.add(menuItemEmployee);

        menuItemClassShifting.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        menuItemClassShifting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_shift.png"))); // NOI18N
        menuItemClassShifting.setText("Class Shifting");
        menuItemClassShifting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemClassShiftingActionPerformed(evt);
            }
        });
        menuEntry.add(menuItemClassShifting);

        menuItemEvents.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/medal-silver-1-icon.png"))); // NOI18N
        menuItemEvents.setText("Events / Compitition");
        menuItemEvents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemEventsActionPerformed(evt);
            }
        });
        menuEntry.add(menuItemEvents);

        jMenuBar1.add(menuEntry);

        menuFees.setText("Fees");
        menuFees.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuFees.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemFeesStructure.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        menuItemFeesStructure.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_struct.png"))); // NOI18N
        menuItemFeesStructure.setText("Fees Structure");
        menuItemFeesStructure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemFeesStructureActionPerformed(evt);
            }
        });
        menuFees.add(menuItemFeesStructure);

        menuItemChallanAndPay.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        menuItemChallanAndPay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_reciept.png"))); // NOI18N
        menuItemChallanAndPay.setText("Challan & Payment");
        menuItemChallanAndPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemChallanAndPayActionPerformed(evt);
            }
        });
        menuFees.add(menuItemChallanAndPay);

        menuItemSalary.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        menuItemSalary.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_salary.png"))); // NOI18N
        menuItemSalary.setText("Salary Management");
        menuItemSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSalaryActionPerformed(evt);
            }
        });
        menuFees.add(menuItemSalary);

        jMenuBar1.add(menuFees);

        menuAttendence.setText("Attendence");
        menuAttendence.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuAttendence.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemStudentAttendence.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        menuItemStudentAttendence.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/menu_attend.png"))); // NOI18N
        menuItemStudentAttendence.setText("Student");
        menuItemStudentAttendence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemStudentAttendenceActionPerformed(evt);
            }
        });
        menuAttendence.add(menuItemStudentAttendence);

        jMenuBar1.add(menuAttendence);

        menuExam.setText("Exam");
        menuExam.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuExam.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemExamination.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        menuItemExamination.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/table-sheet-icon.png"))); // NOI18N
        menuItemExamination.setText("Examination");
        menuItemExamination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExaminationActionPerformed(evt);
            }
        });
        menuExam.add(menuItemExamination);

        menuItemExamType.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/category-icon.png"))); // NOI18N
        menuItemExamType.setText("Terms");
        menuItemExamType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExamTypeActionPerformed(evt);
            }
        });
        menuExam.add(menuItemExamType);

        jMenuBar1.add(menuExam);

        menuReport.setText("Report");
        menuReport.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuReport.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemStdChart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/Line Chart.png"))); // NOI18N
        menuItemStdChart.setText("Student Chart");
        menuItemStdChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemStdChartActionPerformed(evt);
            }
        });
        menuReport.add(menuItemStdChart);

        menuItemReports.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/print-icon2.png"))); // NOI18N
        menuItemReports.setText("Reports");
        menuItemReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemReportsActionPerformed(evt);
            }
        });
        menuReport.add(menuItemReports);

        jMenuBar1.add(menuReport);

        menuSMS.setText("SMS");
        menuSMS.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuSMS.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemSMS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/sim-icon-small.png"))); // NOI18N
        menuItemSMS.setText("SMS Sending");
        menuItemSMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSMSActionPerformed(evt);
            }
        });
        menuSMS.add(menuItemSMS);

        jMenuBar1.add(menuSMS);

        menuHelp.setText("Help");
        menuHelp.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        menuHelp.setMargin(new java.awt.Insets(0, 20, 0, 0));

        menuItemAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/Help-icon.png"))); // NOI18N
        menuItemAbout.setText("About");
        menuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAboutActionPerformed(evt);
            }
        });
        menuHelp.add(menuItemAbout);

        jMenuBar1.add(menuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneldevelopers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonImport, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonExport, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelPic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelPic, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonImport, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonExport, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(paneldevelopers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemCampusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCampusActionPerformed
        try {
            campus.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemCampusActionPerformed

    private void menuItemCanfigurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCanfigurationActionPerformed
        try {
            config.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemCanfigurationActionPerformed

    private void menuItemEmployeeCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEmployeeCatActionPerformed
        try {
            empCat.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemEmployeeCatActionPerformed

    private void menuItemSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSectionActionPerformed
        try {
            section.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemSectionActionPerformed

    private void menuItemUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUsersActionPerformed
        try {
            usersFrame.setVisible(true);
        } catch (Exception ex) {
        }        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemUsersActionPerformed

    private void menuItemYearsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemYearsActionPerformed
        try {
            years.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemYearsActionPerformed

    private void menuItemStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemStudentActionPerformed
        try {
            std.setVisible(true);
        } catch (Exception ex) {
            ex.printStackTrace(System.err);
        }
    }//GEN-LAST:event_menuItemStudentActionPerformed

    private void menuItemEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEmployeeActionPerformed
        try {
            emp.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemEmployeeActionPerformed

    private void menuItemClassShiftingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemClassShiftingActionPerformed
        try {
            classShift.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemClassShiftingActionPerformed

    private void menuItemFeesStructureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemFeesStructureActionPerformed
        try {
            feeStruct.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemFeesStructureActionPerformed

    private void menuItemChallanAndPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemChallanAndPayActionPerformed
        if (!fees.isVisible()) {
            fees.setVisible(true);
            return;
        }
        int state = fees.getState();
        if (state == JFrame.ICONIFIED) {
            fees.setState(JFrame.NORMAL);
        } else {
            fees.requestFocus();
        }
    }//GEN-LAST:event_menuItemChallanAndPayActionPerformed

    private void menuItemStudentAttendenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemStudentAttendenceActionPerformed
        try {
            stdAttend.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemStudentAttendenceActionPerformed

    private void menuItemExaminationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExaminationActionPerformed
        try {
            exam.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemExaminationActionPerformed

    private void menuItemExamTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExamTypeActionPerformed
        try {
            examType.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemExamTypeActionPerformed

    private void menuItemSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSalaryActionPerformed
        try {
            salary.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemSalaryActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        exit();
    }//GEN-LAST:event_formWindowClosing

    private void menuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExitActionPerformed
        exit();
    }//GEN-LAST:event_menuItemExitActionPerformed

    private void buttonImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonImportActionPerformed
        int option = fileChooser.showOpenDialog(this);

        if (JFileChooser.APPROVE_OPTION == option) {
            try {
                Properties props = com.school.dao.Handler.getDatabaseProperties();
                com.school.dao.Handler.restoreDB(props.getProperty(com.school.dao.Handler.DB_USERNAME_KEY), props.getProperty(com.school.dao.Handler.DB_PASSWORD_KEY), fileChooser.getSelectedFile().getAbsolutePath());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "", "", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace(System.err);
            }
        }
    }//GEN-LAST:event_buttonImportActionPerformed

    private void buttonExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportActionPerformed
        int option = fileChooser.showSaveDialog(this);
        if (JFileChooser.APPROVE_OPTION == option) {
            try {
                String path = fileChooser.getSelectedFile().getAbsolutePath();
                if (!path.toLowerCase().endsWith(".sql")) {
                    path = (path + ".sql");
                }
                Properties props = com.school.dao.Handler.getDatabaseProperties();
                com.school.dao.Handler.backupDB(props.getProperty(com.school.dao.Handler.DB_USERNAME_KEY), props.getProperty(com.school.dao.Handler.DB_PASSWORD_KEY), path);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "", "", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace(System.err);
            }
        }
    }//GEN-LAST:event_buttonExportActionPerformed

    private void menuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAboutActionPerformed
        JOptionPane.showMessageDialog(this, "Developer\nJay Kumar Tharwani S/O Ghansham Das\nComputer Science Department\nUniversity Of Sindh\nLicensed To\nThe Guardian School HYD.2014\nCONTACT:\njay_tharwani1992@yahoo.com\n+92-333-2836704\n+92-333-2836705\n+92-315-3028704\n");
    }//GEN-LAST:event_menuItemAboutActionPerformed

    private void menuItemStdChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemStdChartActionPerformed
        try {
            stdChart.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemStdChartActionPerformed

    private void menuItemReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemReportsActionPerformed
        try {
            reports.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemReportsActionPerformed

    private void menuItemEventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemEventsActionPerformed
        try {
            events.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemEventsActionPerformed

    private void menuItemSMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSMSActionPerformed
        try {
            smsFrame.setVisible(true);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_menuItemSMSActionPerformed

    /**
     * Get configuration variable from database and set it on frame and menus.
     */
    private void setConfiguration() {
        try {
            List list = DatabaseManager.getData(com.school.model.SchoolConfig.class, Restrictions.like("keyName", Configuration.SCHOOL));
            if (list.size() > 0) {
                this.setTitle(((SchoolConfig) list.get(0)).getValueName());
            }

            list = DatabaseManager.getData(com.school.model.SchoolConfig.class, Restrictions.like("keyName", Configuration.LOGO));
            if (list.size() > 0) {
                try {
                    Image image = (new javax.swing.ImageIcon(((SchoolConfig) list.get(0)).getValueName())).getImage();
                    this.setIconImage(image);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * Set appearence of frame (restrict the visiblity of frame) according to
     * user privilege.
     *
     * @param user
     */
    private void setAppearence(TgUser user) {
        try {
            UserPrivilege campPriv = PrivilegeHelper.getPrivilege(user, CampusJFrame.class.getName());
            if (!campPriv.getIsActive()) {
                menuItemCampus.setEnabled(false);
            } else {
                campus = new CampusJFrame(campPriv);
            }


            UserPrivilege configPriv = PrivilegeHelper.getPrivilege(user, ConfigJFrame.class.getName());
            if (!configPriv.getIsActive()) {
                menuItemCampus.setEnabled(false);
            } else {
                config = new ConfigJFrame(configPriv);
            }

            UserPrivilege catPriv = PrivilegeHelper.getPrivilege(user, EmployeeCategoryJFrame.class.getName());
            if (!catPriv.getIsActive()) {
                menuItemEmployeeCat.setEnabled(false);
            } else {
                empCat = new EmployeeCategoryJFrame(catPriv);
            }

            UserPrivilege secPriv = PrivilegeHelper.getPrivilege(user, SectionJFrame.class.getName());
            if (!secPriv.getIsActive()) {
                menuItemSection.setEnabled(false);
            } else {
                section = new SectionJFrame(secPriv);
            }

            UserPrivilege userPriv = PrivilegeHelper.getPrivilege(user, UserJFrame.class.getName());
            if (!userPriv.getIsActive()) {
                menuItemUsers.setEnabled(false);
            } else {
                usersFrame = new UserJFrame(userPriv);
            }

            UserPrivilege yearPriv = PrivilegeHelper.getPrivilege(user, YearJFrame.class.getName());
            if (!yearPriv.getIsActive()) {
                menuItemYears.setEnabled(false);
            } else {
                years = new YearJFrame(yearPriv);
            }

            UserPrivilege stdPriv = PrivilegeHelper.getPrivilege(user, StudentJFrame.class.getName());
            if (!stdPriv.getIsActive()) {
                menuItemStudent.setEnabled(false);
            } else {
                std = new StudentJFrame(stdPriv);
            }

            UserPrivilege empPriv = PrivilegeHelper.getPrivilege(user, EmployeesJFrame.class.getName());
            if (!empPriv.getIsActive()) {
                menuItemEmployee.setEnabled(false);
            } else {
                emp = new EmployeesJFrame(empPriv);
            }

            UserPrivilege classShiftPriv = PrivilegeHelper.getPrivilege(user, ClassShiftingJFrame.class.getName());
            if (!classShiftPriv.getIsActive()) {
                menuItemClassShifting.setEnabled(false);
            } else {
                classShift = new ClassShiftingJFrame(classShiftPriv);
            }

            UserPrivilege feestructPriv = PrivilegeHelper.getPrivilege(user, FeeStructureJFrame.class.getName());
            if (!feestructPriv.getIsActive()) {
                menuItemFeesStructure.setEnabled(false);
            } else {
                feeStruct = new FeeStructureJFrame(feestructPriv);
            }

            UserPrivilege feesPriv = PrivilegeHelper.getPrivilege(user, FeeJFrame.class.getName());
            if (!feesPriv.getIsActive()) {
                menuItemChallanAndPay.setEnabled(false);
            } else {
                fees = new FeeJFrame(feesPriv);
            }

            UserPrivilege attendPriv = PrivilegeHelper.getPrivilege(user, StudentAttendenceJFrame.class.getName());
            if (!attendPriv.getIsActive()) {
                menuItemStudentAttendence.setEnabled(false);
            } else {
                stdAttend = new StudentAttendenceJFrame(attendPriv);
            }

            UserPrivilege examPriv = PrivilegeHelper.getPrivilege(user, ExamJFrame.class.getName());
            if (!examPriv.getIsActive()) {
                menuItemExamination.setEnabled(false);
            } else {
                exam = new ExamJFrame(examPriv);
            }

            UserPrivilege examTypePriv = PrivilegeHelper.getPrivilege(user, ExamTypeJFrame.class.getName());
            if (!examTypePriv.getIsActive()) {
                menuItemExamType.setEnabled(false);
            } else {
                examType = new ExamTypeJFrame(examTypePriv);
            }

            UserPrivilege salaryPriv = PrivilegeHelper.getPrivilege(user, SalaryManagementJFrame.class.getName());
            if (!salaryPriv.getIsActive()) {
                menuItemSalary.setEnabled(false);
            } else {
                salary = new SalaryManagementJFrame(salaryPriv);
            }
            UserPrivilege stdChartPriv = PrivilegeHelper.getPrivilege(user, StudentChartJFrame.class.getName());
            if (!stdChartPriv.getIsActive()) {
                menuItemStdChart.setEnabled(false);
            } else {
                stdChart = new StudentChartJFrame(stdChartPriv);
            }

            UserPrivilege reportsPriv = PrivilegeHelper.getPrivilege(user, ReportsJFrame.class.getName());
            if (!reportsPriv.getIsActive()) {
                menuItemReports.setEnabled(false);
            } else {
                reports = new ReportsJFrame(reportsPriv);
            }

            UserPrivilege eventsPriv = PrivilegeHelper.getPrivilege(user, EventsJFrame.class.getName());
            if (!eventsPriv.getIsActive()) {
                menuItemEvents.setEnabled(false);
            } else {
                events = new EventsJFrame(eventsPriv);
            }

            UserPrivilege smsPriv = PrivilegeHelper.getPrivilege(user, SMSJFrame.class.getName());
            if (!smsPriv.getIsActive()) {
                menuItemSMS.setEnabled(false);
            } else {
                smsFrame = new SMSJFrame(smsPriv);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
            ex.printStackTrace();
        }

    }

    private void exit() {
        int i = JOptionPane.showConfirmDialog(this, "Do you want to close?", "Exit", JOptionPane.YES_NO_OPTION);
        if (i == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonExport;
    private javax.swing.JButton buttonImport;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel labelDeveloper;
    private javax.swing.JLabel labelPic;
    private javax.swing.JMenu menuAttendence;
    private javax.swing.JMenu menuEntry;
    private javax.swing.JMenu menuExam;
    private javax.swing.JMenu menuFees;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuItemAbout;
    private javax.swing.JMenuItem menuItemCampus;
    private javax.swing.JMenuItem menuItemCanfiguration;
    private javax.swing.JMenuItem menuItemChallanAndPay;
    private javax.swing.JMenuItem menuItemClassShifting;
    private javax.swing.JMenuItem menuItemEmployee;
    private javax.swing.JMenuItem menuItemEmployeeCat;
    private javax.swing.JMenuItem menuItemEvents;
    private javax.swing.JMenuItem menuItemExamType;
    private javax.swing.JMenuItem menuItemExamination;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JMenuItem menuItemFeesStructure;
    private javax.swing.JMenuItem menuItemReports;
    private javax.swing.JMenuItem menuItemSMS;
    private javax.swing.JMenuItem menuItemSalary;
    private javax.swing.JMenuItem menuItemSection;
    private javax.swing.JMenuItem menuItemStdChart;
    private javax.swing.JMenuItem menuItemStudent;
    private javax.swing.JMenuItem menuItemStudentAttendence;
    private javax.swing.JMenuItem menuItemUsers;
    private javax.swing.JMenuItem menuItemYears;
    private javax.swing.JMenu menuReport;
    private javax.swing.JMenu menuSMS;
    private javax.swing.JMenu menuSetup;
    private javax.swing.JPanel paneldevelopers;
    // End of variables declaration//GEN-END:variables
}
