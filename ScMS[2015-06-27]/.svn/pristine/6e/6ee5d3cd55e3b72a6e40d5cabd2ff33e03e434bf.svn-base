/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.school.view;

import com.school.model.Campus;
import com.school.model.UserPrivilege;
import com.school.dao.DatabaseManager;
import java.util.List;
import javax.swing.JOptionPane;
import com.school.utils.ComponentHandler;
import com.school.utils.Filter;

/**
 * This class is Frame of Campus, provides the insertion
 * deletion & update the campus
 * @author JAY KUMAR
 */
public class CampusJFrame extends javax.swing.JFrame {

    /**
     * <b>privilege</b> - bean.UserPrivilege
     * For checking the permission given to user
     */
    private UserPrivilege privilege;

    /**
     * User Privilege is derived from bean.User when a user in loged in.
     * @param privilege - bean.UserPrivilege
     */
    public CampusJFrame(UserPrivilege privilege) {
        initComponents();
        ComponentHandler.setJFrameCenterPostion(this);
        ComponentHandler.hideOnEscape(this);
        this.privilege = privilege;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textFieldId = new javax.swing.JTextField();
        textFieldName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaLocation = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaRemarks = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        listCampus = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        buttonUpdate = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonAdd = new javax.swing.JButton();
        buttonClear = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setTitle("Campus");
        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CAMPUS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("ID");

        textFieldId.setEditable(false);
        textFieldId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        textFieldName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Location");

        textAreaLocation.setColumns(20);
        textAreaLocation.setRows(5);
        jScrollPane1.setViewportView(textAreaLocation);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("CODE");

        textAreaRemarks.setColumns(20);
        textAreaRemarks.setRows(5);
        jScrollPane2.setViewportView(textAreaRemarks);

        listCampus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        listCampus.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listCampusValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listCampus);

        buttonUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/document-arrow-up-icon.png"))); // NOI18N
        buttonUpdate.setText("Update");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        buttonDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/database-delete-icon.png"))); // NOI18N
        buttonDelete.setText("Delete");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/database-add-icon.png"))); // NOI18N
        buttonAdd.setText("Add");
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        buttonClear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/empty-icon.png"))); // NOI18N
        buttonClear.setText("Clear");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(buttonAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                        .addComponent(buttonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(buttonUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("*campus code will be appended in the staff id of employees");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(textFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2)
                                    .addComponent(jScrollPane1))))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(textFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * refresh the data and check privileges
     * @param b 
     */
    @Override
    public void setVisible(boolean b) {
        super.setVisible(b); //To change body of generated methods, choose Tools | Templates.
        if (privilege.getIsAdd() == null || (!privilege.getIsAdd())) {
            buttonAdd.setVisible(false);
        }
        if (privilege.getIsDelete() == null || (!privilege.getIsDelete())) {
            buttonDelete.setVisible(false);
        }
        if (privilege.getIsUpdate() == null || (!privilege.getIsUpdate())) {
            buttonUpdate.setVisible(false);
        }
        if (b) {
            refreshList();
        }
    }

    /**
     * refresh JList with Campus bean from database
     */
    private void refreshList() {
        try {
            List list = DatabaseManager.getData(Campus.class);
//            List list = DatabaseManager.session.createCriteria(Campus.class).list();
            listCampus.setListData(list.toArray());
            buttonDelete.setEnabled(false);
            buttonUpdate.setEnabled(false);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error Occured..!\n" + ex.getMessage());
            ex.printStackTrace(System.err);
        }
    }

    /**
     * Clear all text fields in frame
     */
    private void clear() {
        textFieldId.setText("");
        textFieldName.setText("");
        textAreaLocation.setText("");
        textAreaRemarks.setText("");
    }

    /**
     * This method called when button <b>ADD</b> is pressed
     * @param evt 
     */
    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        String name = Filter.filterString(textFieldName.getText());
        if (name.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campus Name should not be empty");
            return;
        }
        String location = Filter.filterString(textAreaLocation.getText());
        String remarks = Filter.filterString(textAreaRemarks.getText());
        try {
            Campus camp = new Campus(name);
            camp.setLocation(location);
            camp.setRemarks(remarks);
            int id = ((Integer) DatabaseManager.addData(camp)).intValue();
            System.out.println("ID: " + id);
            refreshList();
            clear();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error Occured..!\n" + ex.getMessage());
            ex.printStackTrace(System.err);
        }
    }//GEN-LAST:event_buttonAddActionPerformed

    /**
     * This method called when button <b>DELETE</b> is pressed
     * @param evt 
     */
    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        Campus camp = (Campus) listCampus.getSelectedValue();
        int id = DatabaseManager.deleteData(Campus.class, camp.getCampusId());
        System.out.println("ID: " + id);
        refreshList();
        clear();
    }//GEN-LAST:event_buttonDeleteActionPerformed

    /**
     * This method called when button <b>UPDATE</b> is pressed
     * @param evt 
     */
    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        String name = Filter.filterString(textFieldName.getText());
        if (name.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campus Name should not be empty");
            return;
        }
        String location = Filter.filterString(textAreaLocation.getText());
        String remarks = Filter.filterString(textAreaRemarks.getText());
        Campus camp = (Campus) listCampus.getSelectedValue();
        camp.setName(name);
        camp.setLocation(location);
        camp.setRemarks(remarks);
        try {
            DatabaseManager.updateData(camp);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error Occured..!\n" + ex.getMessage());
            ex.printStackTrace(System.err);
        }
    }//GEN-LAST:event_buttonUpdateActionPerformed

    /**
     * This method called when button <b>CLEAR</b> is pressed
     * @param evt 
     */
    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        clear();
    }//GEN-LAST:event_buttonClearActionPerformed

    /**
     * This method called when an item from CAMPUS JList is been selected.
     * @param evt 
     */
    private void listCampusValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listCampusValueChanged
        Campus camp = (Campus) listCampus.getSelectedValue();
        if (camp == null) {
            return;
        }
        textFieldId.setText("" + camp.getCampusId());
        textFieldName.setText(camp.getName());
        textAreaLocation.setText(camp.getLocation());
        textAreaRemarks.setText(camp.getRemarks());
        buttonDelete.setEnabled(true);
        buttonUpdate.setEnabled(true);
    }//GEN-LAST:event_listCampusValueChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton buttonAdd;
    public javax.swing.JButton buttonClear;
    public javax.swing.JButton buttonDelete;
    public javax.swing.JButton buttonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList listCampus;
    private javax.swing.JTextArea textAreaLocation;
    private javax.swing.JTextArea textAreaRemarks;
    private javax.swing.JTextField textFieldId;
    private javax.swing.JTextField textFieldName;
    // End of variables declaration//GEN-END:variables
}
